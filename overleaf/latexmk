#!/usr/bin/python3

import sys
import os
import shutil
import tempfile
import subprocess
import logging
import re


LOGFILE = "/tmp/latexmkwrapper.log"
DEBUG = True
FILE_REGEX = "[a-zA-Z0-9\ _-]+\.tex"
COMPILER = ["-pdf", "-pdfdvi", "-lualatex", "-xelatex"]

logging.basicConfig(
    filename=LOGFILE,
    level=logging.DEBUG,
    format="%(asctime)s [%(levelname)s] %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S"
)
logger = logging.getLogger(__name__)


def main(args):
    if DEBUG:
        logger.debug("Original command: " + " ".join(args))

    pwd = os.getcwd()

    compiler = ""
    auxdir = ""
    outdir = ""
    infile = ""

    with tempfile.TemporaryDirectory() as tmpdirname:
        # tmp project files
        shutil.copytree(pwd, tmpdirname, dirs_exist_ok=True)

        # set tmp path to args and save old args
        custom_args = []
        for arg in args:
            custom_args.append(arg.replace(pwd, tmpdirname)) 
            if arg.startswith("-auxdir="):
                auxdir = arg[len("-auxdir="):]
            elif arg.startswith("-outdir"):
                outdir = arg[len("-outdir="):]
            elif arg in COMPILER:
                compiler = arg[len("-"):]
            elif arg == sys.argv[-1]:
                infile = arg

        custom_args[0] = "latexmk"

        # sanitize filename
        file_path = custom_args[-1]
        filename = os.path.basename(file_path)

        # if not valid filename
        if not re.match(FILE_REGEX, filename):
            logger.error(f"Unsecure filename: {filename}")
            with open(auxdir + "/output.log", "a") as f:
                f.write("Error: Filename not supported. Please only use letters, hyphens, underscore and spaces before the .tex\n")
            sys.exit(0)

        safe_file_path = os.path.join(tmpdirname, filename)
        custom_args[-1] = safe_file_path
        
        if DEBUG:
            logger.debug(f"Custom Args: {custom_args}")

        apptainer_command = [
            "apptainer", "exec",
            "--cleanenv",
            "--no-mount", "dev,hosts,sys,tmp",
            "--no-home",
#            "--contain", TODO: is that a must have option? otherwise latexmk wont compile with --shell-escapes
            "--bind", f"{tmpdirname}:{tmpdirname}",
            "/apptainer/latexmk-isolated.sif"
        ] + custom_args

        if DEBUG:
            logger.debug("Apptainer command: " + " ".join(apptainer_command))

        try:
            result = subprocess.run(apptainer_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        except Exception as e:
            logger.error(f"Something went wrong on running {apptainer_command}: {e}")

        if DEBUG:
            logger.debug(f"{result.stdout}")
        
        if result and result.returncode != 0:
            logger.error(f"{result.stderr}")
            logger.error(f"{result.returncode}")

        shutil.copytree(tmpdirname, pwd, dirs_exist_ok=True)
        sys.exit(0)


if __name__ == "__main__":
    main(sys.argv)